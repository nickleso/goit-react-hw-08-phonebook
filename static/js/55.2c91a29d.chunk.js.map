{"version":3,"file":"static/js/55.2c91a29d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm.jsx","components/Contacts.jsx","components/ContactList.jsx","components/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getFilter = state => state.filter;\n\n// Contacts selectors\nexport const getContacts = state => state.contacts.contactList;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/contacts/selectors';\nimport { addContact } from '../redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  function onFormSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const normalizedName = name.toLowerCase();\n    const number = form.elements.number.value;\n\n    const checkByName = contactList.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (checkByName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  }\n\n  return (\n    <div className=\"contacts\">\n      <h2 className=\"contacts__title\">Add new contacts</h2>\n      <form className=\"contacts__form\" onSubmit={onFormSubmit}>\n        <label className=\"contacts__label\">\n          Name\n          <input\n            className=\"contacts__input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"[a-zA-Z][a-zA-Z0-9-_.\\s]{1,17}\"\n            title=\"Only letters (either case), numbers, hyphens, underscores, and periods. The username must start with a letter and must be between 1 and 17 characters long.\"\n            required\n          />\n        </label>\n        <label className=\"contacts__label\">\n          Phone\n          <input\n            className=\"contacts__input\"\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className=\"contacts__button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts/operations';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nexport const Contacts = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <div className=\"contactsList__wrap\">\n        <p className=\"contactsList__name\">{contact.name}:</p>\n        <a href=\"tel:contact.number\">{contact.number}</a>\n      </div>\n      <button\n        className=\"contactsList__button\"\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Del\n        <TiDeleteOutline style={{ verticalAlign: '-4px' }} />\n      </button>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts, getFilter } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Contacts } from './Contacts';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function getFiltredContacts() {\n    if (!filter) {\n      return contactList;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contactList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  const visibleContacts = getFiltredContacts();\n\n  return (\n    <div className=\"contactsList\">\n      <h2 className=\"contactsList__title\">Contacts list</h2>\n      <ul className=\"contactsList__list\">\n        {visibleContacts.map(contact => (\n          <li className=\"contactsList__item\" key={contact.id}>\n            <Contacts contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../redux/contacts/filterSlice';\nimport { getContacts } from '../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  function onFilterChange(event) {\n    const name = event.currentTarget.value;\n    dispatch(filterContacts(name));\n  }\n\n  return (\n    <div className=\"filter\">\n      <h2 className=\"filter__title\">Filter contacts</h2>\n      <div className=\"filter__bcg\"></div>\n      <div className=\"filter__form\">\n        <label className=\"filter__label\">\n          Find contacts by name\n          <input\n            className=\"filter__input\"\n            name=\"filter\"\n            onChange={onFilterChange}\n          ></input>\n        </label>\n        <p className=\"filter__descr\">Total contacts: {contactList.length}</p>\n      </div>\n    </div>\n  );\n};\n","import { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <main>\n        <section className=\"section\">\n          <div className=\"container phonebook\">\n            <h1 className=\"hidden\">Phonebook</h1>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n          </div>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["getFilter","state","filter","getContacts","contacts","contactList","ContactForm","dispatch","useDispatch","useSelector","className","onSubmit","event","preventDefault","form","target","name","elements","value","normalizedName","toLowerCase","number","find","contact","alert","newContact","addContact","reset","type","placeholder","pattern","title","required","Contacts","href","onClick","deleteContact","id","style","verticalAlign","ContactList","useEffect","fetchContacts","visibleContacts","normalizedFilter","includes","getFiltredContacts","map","Filter","onChange","currentTarget","filterContacts","length"],"sourceRoot":""}