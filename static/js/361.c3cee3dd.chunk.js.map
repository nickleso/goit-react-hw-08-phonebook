{"version":3,"file":"static/js/361.c3cee3dd.chunk.js","mappings":"iOAKaA,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IA2BhC,OACE,kBAAMC,UAAWC,EAAAA,EAAAA,KAAUC,SA1B7B,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACbC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAiBH,EAAKI,cACtBC,EAASP,EAAKG,SAASI,OAAOH,MAMpC,GAJoBZ,EAAYgB,MAC9B,SAAAC,GAAO,OAAIA,EAAQP,KAAKI,gBAAkBD,CAAnC,IAIPK,MAAM,GAAD,OAAIR,EAAJ,iCADP,CAKA,IAAMS,EAAa,CACjBT,KAAAA,EACAK,OAAAA,GAGFjB,GAASsB,EAAAA,EAAAA,IAAWD,IACpBX,EAAKa,OARJ,CASF,EAGC,WACE,mBAAOlB,UAAWC,EAAAA,EAAAA,YAAlB,kBAEE,kBACEkB,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOtB,UAAWC,EAAAA,EAAAA,YAAlB,mBAEE,kBACEkB,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQtB,UAAWC,EAAAA,EAAAA,aAAkBkB,KAAK,SAA1C,2BAKL,E,SCzDYI,EAAW,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QACnBnB,GAAWC,EAAAA,EAAAA,MAGjB,OACE,iCACE,yBACGkB,EAAQP,KADX,MACkB,0BAAOO,EAAQF,aAEjC,mBACEZ,UAAWC,EAAAA,EAAAA,gBACXkB,KAAK,SACLK,QAVkB,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAcX,EAAQY,IAArC,EAOpB,sBASL,EChBYC,EAAc,WACzB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B6B,GAAS9B,EAAAA,EAAAA,IAAY+B,EAAAA,KAE3BC,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,IAcJ,IAAMqC,EAZN,WACE,IAAKJ,EACH,OAAO/B,EAGT,IAAMoC,EAAmBL,EAAOjB,cAEhC,OAAOd,EAAY+B,QAAO,SAAAd,GAAO,OAC/BA,EAAQP,KAAKI,cAAcuB,SAASD,EADL,GAGlC,CAEuBE,GAExB,OACE,eAAInC,UAAWC,EAAAA,EAAAA,cAAf,SACG+B,EAAgBI,KAAI,SAAAtB,GAAO,OAC1B,eAAId,UAAWC,EAAAA,EAAAA,cAAf,UACE,SAACsB,EAAD,CAAUT,QAASA,KADkBA,EAAQY,GADrB,KAOjC,EClCYW,EAAS,WACpB,IAAM1C,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAOhC,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,aAAhB,WACE,mBAAOD,UAAWC,EAAAA,EAAAA,YAAlB,mCAEE,kBAAOM,KAAK,SAAS+B,SAT3B,SAAwBnC,GACtB,IAAMI,EAAOJ,EAAMoC,cAAc9B,MACjCd,GAAS6C,EAAAA,EAAAA,IAAejC,GACzB,QAQG,8CAAsBV,EAAY4C,YAGvC,ECSD,EA1BiB,WACf,OACE,+BACE,kBAAMzC,UAAWC,EAAAA,EAAAA,UAAjB,WACE,gBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,UACE,qBAASD,UAAWC,EAAAA,EAAAA,gBAApB,WACE,eAAID,UAAWC,EAAAA,EAAAA,iBAAf,wBACA,SAACP,EAAD,UAIJ,gBAAKM,UAAWC,EAAAA,EAAAA,UAAhB,UACE,qBAASD,UAAWC,EAAAA,EAAAA,eAApB,WACE,eAAID,UAAWC,EAAAA,EAAAA,iBAAf,uBACA,SAACoC,EAAD,UAIJ,gBAAKrC,UAAWC,EAAAA,EAAAA,UAAhB,UACE,SAAC0B,EAAD,UAKT,C,oBC5BD,KAAgB,UAAY,uBAAuB,UAAY,uBAAuB,gBAAkB,6BAA6B,iBAAmB,8BAA8B,KAAO,kBAAkB,aAAe,0CAA0C,YAAc,yBAAyB,aAAe,0BAA0B,eAAiB,4BAA4B,cAAgB,2BAA2B,cAAgB,2BAA2B,gBAAkB,6B","sources":["components/ContactForm.jsx","components/Contacts.jsx","components/ContactList.jsx","components/Filter.jsx","pages/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/App.module.css?6c4d"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/contacts';\nimport { addContact } from '../redux/contacts';\nimport css from './App.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  function onFormSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const normalizedName = name.toLowerCase();\n    const number = form.elements.number.value;\n\n    const checkByName = contactList.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (checkByName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  }\n\n  return (\n    <form className={css.form} onSubmit={onFormSubmit}>\n      <label className={css.form__label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.form__label}>\n        Phone\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.form__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts';\nimport css from './App.module.css';\n\nexport const Contacts = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <p>\n        {contact.name}: <span>{contact.number}</span>\n      </p>\n      <button\n        className={css.contact__button}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, getContacts, getFilter } from '../redux/contacts';\nimport { Contacts } from './Contacts';\nimport css from './App.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function getFiltredContacts() {\n    if (!filter) {\n      return contactList;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contactList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  const visibleContacts = getFiltredContacts();\n\n  return (\n    <ul className={css.contact__list}>\n      {visibleContacts.map(contact => (\n        <li className={css.contact__item} key={contact.id}>\n          <Contacts contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts, getContacts } from '../redux/contacts';\nimport css from './App.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  function onFilterChange(event) {\n    const name = event.currentTarget.value;\n    dispatch(filterContacts(name));\n  }\n\n  return (\n    <div className={css.form__filter}>\n      <label className={css.form__label}>\n        Find contacts by name\n        <input name=\"filter\" onChange={onFilterChange}></input>\n      </label>\n      <div>Total contacts: {contactList.length}</div>\n    </div>\n  );\n};\n","import { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\nimport css from '../components/App.module.css';\n\nconst Contacts = () => {\n  return (\n    <>\n      <main className={css.phonebook}>\n        <div className={css.container}>\n          <section className={css.phonebook__wrap}>\n            <h1 className={css.phonebook__title}>Phonebook</h1>\n            <ContactForm />\n          </section>\n        </div>\n\n        <div className={css.container}>\n          <section className={css.contacts__wrap}>\n            <h2 className={css.phonebook__title}>Contacts</h2>\n            <Filter />\n          </section>\n        </div>\n\n        <div className={css.container}>\n          <ContactList />\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"phonebook\":\"App_phonebook__9tIMG\",\"phonebook__wrap\":\"App_phonebook__wrap__bcuvJ\",\"phonebook__title\":\"App_phonebook__title__scvIn\",\"form\":\"App_form__CfQex\",\"form__filter\":\"App_form__filter__Yu-Wa App_form__CfQex\",\"form__label\":\"App_form__label__d8zin\",\"form__button\":\"App_form__button__1-K2i\",\"contacts__wrap\":\"App_contacts__wrap__iUZVl\",\"contact__list\":\"App_contact__list__HRBru\",\"contact__item\":\"App_contact__item__GLCxq\",\"contact__button\":\"App_contact__button__jR8L+\"};"],"names":["ContactForm","dispatch","useDispatch","contactList","useSelector","getContacts","className","css","onSubmit","event","preventDefault","form","target","name","elements","value","normalizedName","toLowerCase","number","find","contact","alert","newContact","addContact","reset","type","pattern","title","required","Contacts","onClick","deleteContact","id","ContactList","filter","getFilter","useEffect","fetchContacts","visibleContacts","normalizedFilter","includes","getFiltredContacts","map","Filter","onChange","currentTarget","filterContacts","length"],"sourceRoot":""}