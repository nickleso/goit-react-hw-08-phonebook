{"version":3,"file":"static/js/416.b51caa8e.chunk.js","mappings":"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","sources":["components/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/styles/App.module.scss?58bb","components/Contacts.jsx","components/ContactList.jsx","components/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/contacts';\nimport { addContact } from '../redux/contacts';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  function onFormSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const normalizedName = name.toLowerCase();\n    const number = form.elements.number.value;\n\n    const checkByName = contactList.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (checkByName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    form.reset();\n  }\n\n  return (\n    <div className=\"contacts\">\n      <h2 className=\"contacts__title\">Add new contacts</h2>\n      <form className=\"contacts__form\" onSubmit={onFormSubmit}>\n        <label className=\"contacts__label\">\n          Name\n          <input\n            className=\"contacts__input\"\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className=\"contacts__label\">\n          Phone\n          <input\n            className=\"contacts__input\"\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className=\"contacts__button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__mB9ij\",\"section\":\"App_section__q6Ycg\",\"phonebook\":\"App_phonebook__3DOY6\",\"registration\":\"App_registration__eaW8m\",\"registration__title\":\"App_registration__title__daSge\",\"registration__form\":\"App_registration__form__9BUKA\",\"registration__input\":\"App_registration__input__Tvx8v\",\"registration__label\":\"App_registration__label__q+jET\",\"registration__button\":\"App_registration__button__P2fel\",\"registration__icon\":\"App_registration__icon__D9L2r\",\"phonebook__wrap\":\"App_phonebook__wrap__LW3jX\",\"phonebook__title\":\"App_phonebook__title__fCTLM\",\"form\":\"App_form__4Irp2\",\"form__filter\":\"App_form__filter__QNSWZ App_form__4Irp2\",\"form__label\":\"App_form__label__3u-CZ\",\"form__button\":\"App_form__button__oKVEz\",\"contacts__wrap\":\"App_contacts__wrap__MWbbU\",\"contact__list\":\"App_contact__list__uYpxj\",\"contact__item\":\"App_contact__item__HesGr\",\"contact__button\":\"App_contact__button__lTinc\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts';\nimport css from '../styles/App.module.scss';\n\nexport const Contacts = ({ contact }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <p>\n        {contact.name}: <span>{contact.number}</span>\n      </p>\n      <button\n        className={css.contact__button}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, getContacts, getFilter } from '../redux/contacts';\nimport { Contacts } from './Contacts';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  function getFiltredContacts() {\n    if (!filter) {\n      return contactList;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contactList.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  const visibleContacts = getFiltredContacts();\n\n  return (\n    <div className=\"contactsList\">\n      <h2 className=\"contactsList__title\">Contacts list</h2>\n      <ul className=\"contactsList__form\">\n        {visibleContacts.map(contact => (\n          <li className=\"contactsList__label\" key={contact.id}>\n            <Contacts contact={contact} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts, getContacts } from '../redux/contacts';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(getContacts);\n\n  function onFilterChange(event) {\n    const name = event.currentTarget.value;\n    dispatch(filterContacts(name));\n  }\n\n  return (\n    <div className=\"filter\">\n      <h2 className=\"filter__title\">Filter contacts</h2>\n      <div className=\"filter__form\">\n        <label className=\"filter__label\">\n          Find contacts by name\n          <input\n            className=\"filter__input\"\n            name=\"filter\"\n            onChange={onFilterChange}\n          ></input>\n        </label>\n        <p className=\"filter__descr\">Total contacts: {contactList.length}</p>\n      </div>\n    </div>\n  );\n};\n","import { ContactForm } from '../components/ContactForm';\nimport { ContactList } from '../components/ContactList';\nimport { Filter } from '../components/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <main>\n        <section className=\"section\">\n          <div className=\"container phonebook\">\n            <h1 className=\"hidden\">Phonebook</h1>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n          </div>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","dispatch","useDispatch","contactList","useSelector","getContacts","className","onSubmit","event","preventDefault","form","target","name","elements","value","normalizedName","toLowerCase","number","find","contact","alert","newContact","addContact","reset","type","placeholder","pattern","title","required","Contacts","css","onClick","deleteContact","id","ContactList","filter","getFilter","useEffect","fetchContacts","visibleContacts","normalizedFilter","includes","getFiltredContacts","map","Filter","onChange","currentTarget","filterContacts","length"],"sourceRoot":""}